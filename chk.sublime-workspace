{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "pathToTextEditor = \"%programdata%\\Microsoft\\Windows\\Start Menu\\Programs\\Sublime Text 3.lnk\"\npathToThisScript := A_ScriptFullPath\npathToQuickNotes := \"c:\\Program Files (x86)\\Microsoft Office\\Office14\\ONENOTE.EXE\"\ntextToMatchForQuickNotes := \"OneNote\"\nutilitiesDirectory := A_ScriptDir \"\\..\\\"\npathToSQLMS := A_ScriptDir \"\\..\\LinqPad\\LINQPad.exe\"\npathToTimeSheet = \"C:\\Users\\adresko\\Documents\\Time sheets\\time sheet.xlsx\"\n\n\n\n\nsilentSoundDirectory := A_ScriptDir \"\\..\\silentsound\\\"\n\n#e::\nPath = %A_MyDocuments%\nParent := SubStr(Path, 1, InStr(SubStr(Path,1,-1), \"\\\", 0, 0)-1)\nrun %Parent%\\links\nreturn\n\n#+L::\nrun \"%A_ScriptDir%\\scrnsave.scr.lnk\"\nreturn\n\n\n/*\nActivates the current objective.\n*/\n#^c::\n\nSetTitleMatchMode, 2\nFileReadLine, objective, objective.txt, 1\nIfWinExist %objective%\n{\n    WinActivate\n}\nreturn\n\n/*\nPaste figure and adds caption in outlook\n*/\n#+^e::\nSetTitleMatchMode, 2\nWinGetActiveTitle, Title\nSend, {CTRLDOWN}v{CTRLUP}\nSleep 1000,\nSend, {ALT}{ALT}{SHIFTDOWN}{LEFT}{SHIFTUP}{AppsKey}N\nWinWait, Caption,\nIfWinNotActive, Caption, , WinActivate, Caption,\nWinWaitActive, Caption,\nSleep 100\nSend {ENTER}\nSleep 100\nSend, {SHIFTDOWN}{HOME}{SHIFTUP}\nSleep 500\nWinWait, %Title%,\nIfWinNotActive, %Title%, , WinActivate, %Title%,\nWinWaitActive, %Title%,\nclipboard =  ; Start off empty to allow ClipWait to detect when the text has arrived.\nSend ^c\nClipWait  ; Wait for the clipboard to contain text.\nSend ^h\nSleep 500\nSend jjj\nSend {ENTER}{ENTER}{ESC}\nSleep 500\nSend #+e\nreturn\n\n/*\nInsert the copied reference  in outlook\n*/\n#+e::\nspaceIndex := InStr( clipboard, \" \")\ntype := SubStr(clipboard, 1, spaceIndex)\n\nSend, {ALT}SRF\nWinWait, Cross-reference,\nIfWinNotActive, Cross-reference, , WinActivate, Cross-reference,\nWinWaitActive, Cross-reference,\nLoop, parse, type\n{\n  Send, %A_LoopField%\n}\nSend, {TAB}!w\nSleep 500\n\n\nLoop, parse, clipboard\n{\n  Sendraw, %A_LoopField%\n}\nSend {ALTDOWN}I{ALTUP}{ESC}\nreturn\n\n\n/*\nPaste figure and adds caption\n*/\n#+^f::\nSetTitleMatchMode, 2\nWinGetActiveTitle, Title\nSend, {CTRLDOWN}v{CTRLUP}\nSleep 1000,\nSend, {ALT}{ALT}{SHIFTDOWN}{LEFT}{SHIFTUP}{ALT}SP\nWinWait, Caption,\nIfWinNotActive, Caption, , WinActivate, Caption,\nWinWaitActive, Caption,\nSleep 100\nSend {ENTER}\nSleep 100\nSend, {SHIFTDOWN}{HOME}{SHIFTUP}\nSleep 500\nWinWait, %Title%,\nIfWinNotActive, %Title%, , WinActivate, %Title%,\nWinWaitActive, %Title%,\nclipboard =  ; Start off empty to allow ClipWait to detect when the text has arrived.\nSend ^c\nClipWait  ; Wait for the clipboard to contain text.\nSend ^f\nSleep 500\nSend jjj\nSend {ENTER}{ENTER}{ESC}\nSleep 500\nSend #+f\nreturn\n\n/*\nInsert the copied reference\n*/\n#+f::\nspaceIndex := InStr( clipboard, \" \")\ntype := SubStr(clipboard, 1, spaceIndex)\n\nSend, {ALT}SRF\nWinWait, Cross-reference,\nIfWinNotActive, Cross-reference, , WinActivate, Cross-reference,\nWinWaitActive, Cross-reference,\nLoop, parse, type\n{\n  Send, %A_LoopField%\n}\nSend, {TAB}!w\nSleep 500\n\n\nLoop, parse, clipboard\n{\n  Sendraw, %A_LoopField%\n}\nSend {ALTDOWN}I{ALTUP}{ESC}\nreturn\n\n/*\nSETS the current objective.\n*/\n#!c::\nFileDelete, objective.txt\nWinGetActiveTitle, Title\nMsgBox, The active window is \"%Title%\".\nFileAppend, %Title%, objective.txt\n\nreturn\n\n#+z::\nSetTitleMatchMode, 2\nIfWinExist Zune\n{\n    WinActivate\n}\nelse\n{\n	Run C:\\Program Files\\Zune\\Zune.exe\n	WinActivate\n}\nreturn\n\n#+h::\nSetTitleMatchMode, 2\nIfWinExist HexChat\n{\n    WinActivate\n}\nelse\n{\n  Run C:\\Program Files\\HexChat\\hexchat.exe\n  WinActivate\n}\nreturn\n\n#Space::\nSetTitleMatchMode, Regex\nInputBox, UserInput, Title?\nIfWinExist i)%UserInput%\n{\n	WinActivate\n}\nelse\n{\n	MsgBox Could not find \"%UserInput%\"\n}\nreturn\n\n#+o::\n\nInputBox, UserInput, OneNote Faves, 1 = Groceries. 2 = Alex. 3 = Together. 4 = CSI Projects. 5 = Organizational, , 640, 480\nif NOT ErrorLevel\n{\n  IfEqual UserInput, 1\n  {\n    Run %A_ScriptDir%\\..\\OneNoteFaves\\Groceries.url\n  }\n\n  IfEqual UserInput, 2\n  {\n    Run %A_ScriptDir%\\..\\OneNoteFaves\\Alex.url\n  }\n\n\n  IfEqual UserInput, 3\n  {\n    Run %A_ScriptDir%\\..\\OneNoteFaves\\Together.url\n  }\n\n\n  IfEqual UserInput, 4\n  {\n    Run %A_ScriptDir%\\..\\OneNoteFaves\\CSI Projects.url\n  }\n\n  IfEqual UserInput, 5\n  {\n    Run %A_ScriptDir%\\..\\OneNoteFaves\\Organizational.url\n  }\n\n\n}\n\nreturn\n\n\n\n#+^k::\nSetTitleMatchMode, 2\nIfWinExist Remote Desktop\n{\n    WinActivate\n}\nelse\n{\n    Run mstsc\n    WinActivate\n}\nreturn\n\n\n\n\n#w::\nSetTitleMatchMode, 2\nIfWinExist Windows Media Player\n{\n    WinActivate\n}\nelse\n{\n    Run wmplayer\n    WinActivate\n}\nreturn\n\n\n#+r::\nSetTitleMatchMode, 2\nIfWinExist Reminder\n{\n    WinActivate\n}\nelse\n{\n    Send, {LWINDOWN}k{LWINUP}\n    WinWait, - Outlook,\n    IfWinNotActive, - Outlook, , WinActivate,- Outlook,\n    WinWaitActive, - Outlook,\n    SendPlay, {ALTDOWN}v{ALTUP}m\n\n    IfWinExist Reminders\n    {\n        WinActivate\n    }\n}\nreturn\n\n\n\n\n\n\n\nShowChomeTab(pageTitle, url)\n{\n  SendInput #i\n  WinWaitActive Chrome\n  SendInput {ESC}{ESC}!d\n  Sleep 300\n  SendInput TAB{TAB}%pageTitle%{ENTER}\n  Sleep 2000\n  WinGetActiveTitle, Title\n\n  found := InStr(Title, pageTitle)\n\n  if (found == 0)\n  {\n    SENDInput {SHIFTUP}{ESC}^T\n    Sleep 500\n    send %url%{ENTER}\n  }\n\n}\n\n#+i::\nSetTitleMatchMode, 2\nIfWinExist Chrome\n{\n    WinActivate\n}\nelse\n{\n    Run Chrome\n    WinActivate\n}\nreturn\n\n\n::jad::Alex Dresko\n\n\n::dt::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = %CurrentDateTime%: %A_Space%\nSendInput %RR%  %A_Space%\nreturn\n\n::rr::\nSendInput %RR%\nreturn\n\n\n\n#q::\nSetTitleMatchMode, 2\nIfWinExist LINQPad\n{\n	WinActivate\n\n}\nelse\n{\n	Run %pathToSQLMS%\n}\nreturn\n\n#+q::\nSetTitleMatchMode, 2\nIfWinExist Microsoft SQL Server Management Studio\n{\n	WinActivate\n\n}\nelse\n{\n	Run \"C:\\Program Files (x86)\\Microsoft SQL Server\\120\\Tools\\Binn\\ManagementStudio\\Ssms.exe\"\n}\nreturn\n\n#F9::\nRun %pathToTimeFile%\nreturn\n\n#F11::\nSetTitleMatchMode, 2\nIfWinExist global.ahk\n{\n	WinActivate\n\n}\nelse\n{\n	Run %pathToTextEditor%, \"%pathToThisScript%\"\n}\nreturn\n\n#F12::\nRun %pathToThisScript%\nreturn\n",
			"file": "/C/Users/Alex Dresko/OneDrive/Utilities/AutoHotKeyScripts/Global.ahk",
			"file_size": 7722,
			"file_write_time": 130857832660000000,
			"settings":
			{
				"buffer_size": 5870,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "::dftba::\nSendInput don't forget to be awesome{!}\nreturn\n\n::dtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = %CurrentDateTime% by AD: %A_Space%\nSendInput %RR%  %A_Space%\nreturn\n\n::dadtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = DONE AT %CurrentDateTime% by AD > %A_Space%\nSendInput %RR%  %A_Space%\nreturn\n\n::taodtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = TESTABLE AS OF %CurrentDateTime% by AD > %A_Space%\nSendInput %RR% %A_Space%\nreturn\n\n::dbdtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = DONE BEFORE %CurrentDateTime% by AD >%A_Space%\nSendInput %RR% %A_Space%\nreturn\n\n::sadtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = < STARTED AT %CurrentDateTime% by AD > %A_Space%\nSendInput %RR% %A_Space%\nreturn\n\n\n::aodtad::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = as of %CurrentDateTime% by AD.%A_Space%\nSendInput %RR% %A_Space%\nreturn\n\n::aodt::\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm:ss tt\nRR = as of %CurrentDateTime%. %A_Space%\nSendInput %RR% %A_Space%\nreturn\n\n::fsdtad::\nFormatTime, CurrentDateTime,, yyyy-MM-dd HH-mm-ss\nRR = %CurrentDateTime% by Alex Dresko\nSendInput %RR%\nreturn\n\n::@cc::adresko@cchpsc.org\n::@hotmail::alexdresko@hotmail.com\n::@gmail::alexdresko@gmail.com\n::@home::me@alexdresko.com\n::@tibby::me@tibreadresko.com\n::ccorg::consumerschoicesc.org\n::sddocs::C:\\Users\\adresko\\SkyDrive\\Documents",
			"settings":
			{
				"buffer_size": 1399,
				"line_ending": "Windows",
				"name": "::dftba::"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 35.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/projects/git/chocolatey-hotkey",
		"/C/projects/git/chocolatey-hotkey/chocolatey-packages",
		"/C/Users/Alex Dresko/OneDrive/Utilities/AutoHotKeyScripts"
	],
	"file_history":
	[
		"/C/projects/test/RequireJsStuff/RequireJsStuff/RequireJsStuff.csproj",
		"/C/Users/Alex Dresko/OneDrive/Utilities/LinqPad/csi license.txt",
		"/E/AV/Backup.cmd"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"|AnyCPU",
			"|$(Platform)",
			"|AnyCPU"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "C:\\projects\\git\\chocolatey-hotkey"
		},
		{
			"path": "C:\\ProgramData\\chocolatey\\lib"
		},
		{
			"path": "C:\\Users\\Alex Dresko\\OneDrive\\Utilities\\AutoHotKeyScripts"
		}
	],
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Users/Alex Dresko/OneDrive/Utilities/AutoHotKeyScripts/Global.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5870,
						"regions":
						{
						},
						"selection":
						[
							[
								5672,
								5672
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5192.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1399,
						"regions":
						{
						},
						"selection":
						[
							[
								1399,
								1399
							]
						],
						"settings":
						{
							"auto_name": "::dftba::",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
